// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var React = require("react");
var ReactTestingLibrary = require("../src/ReactTestingLibrary.js");

function toMatchSnapshot(a) {
  return Jest.Expect.toMatchSnapshot(a);
}

function ReactTestingLibraryTest$DummyComponent(Props) {
  return React.createElement("div", undefined, React.createElement("label", undefined, "Choose a color"), React.createElement("select", undefined, React.createElement("option", undefined, "Red"), React.createElement("option", undefined, "Green"), React.createElement("option", {
                      onClick: (function (param) {
                          console.log("Blue");
                          
                        })
                    }, "Blue")));
}

var DummyComponent = {
  make: ReactTestingLibraryTest$DummyComponent
};

Jest.describe("DummyComponent", (function (param) {
        beforeEach(function () {
              return ReactTestingLibrary.renderOnScreen(React.createElement(ReactTestingLibraryTest$DummyComponent, {}));
            });
        Jest.test("render red option", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.getByRole(ReactTestingLibrary.makeByRoleOptions(undefined, undefined, "Red", undefined), {
                                    NAME: "Str",
                                    VAL: "option"
                                  }, document)));
              }));
        Jest.test("render red option", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.getByRole(ReactTestingLibrary.makeByRoleOptions(undefined, undefined, "Green", undefined), {
                                    NAME: "Str",
                                    VAL: "option"
                                  }, document)));
              }));
        return Jest.test("render red option", (function (param) {
                      return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.getByRole(ReactTestingLibrary.makeByRoleOptions(undefined, undefined, "Blue", undefined), {
                                          NAME: "Str",
                                          VAL: "option"
                                        }, document)));
                    }));
      }));

exports.toMatchSnapshot = toMatchSnapshot;
exports.DummyComponent = DummyComponent;
/*  Not a pure module */
